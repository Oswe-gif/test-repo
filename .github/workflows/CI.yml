# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  CI-main:
    name: CI-main
    runs-on: ubuntu-latest

    steps:
      #- uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x
      - name: Restore dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build --no-restore
      - name: Test
        run: dotnet test --no-build --verbosity normal
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./test/Dockerfile
          push: true
          tags: |
            oswe/app:${{ github.sha }}
            oswe/app:latest
  CD-main:
    name: CD-main
    needs: CI-main
    runs-on: ubuntu-latest
    steps:
      - name: Build & Deploy
        uses: actions/checkout@v4 
        env:
            PRIVATE_KEY: ${{secrets.SSH_PRIVATE_KEY}}
            HOSTNAME: ${{secrets.SSH_HOST}}
            USER_NAME: ${{secrets.USER_NAME}}
      - name: Print Environment Variables
        run: |
          echo "PRIVATE_KEY: $PRIVATE_KEY"
          echo "HOSTNAME: $HOSTNAME"
          echo "USER_NAME: $USER_NAME"
      - name: Connect using ssh
        run: |
          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
          ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOSTNAME} '
          docker pull oswe/app:latest
            